a2b4: Index <- 2b4
23e6: Executing subroutine at 3e6
22b6: Executing subroutine at 2b6
7001: V0 <- V0 + 01
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
3025: Skip following if V0 == 25
1206: PC <- 206
71ff: V1 <- V1 + ff
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
601a: V0 <- 1a
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
6025: V0 <- 25
3100: Skip following if V1 == 00
120e: PC <- 20e
c470: V4 <- random & 70
4470: Skip following if V4 != 70
121c: PC <- 21c
c303: V3 <- random & 03
601e: V0 <- 1e
6103: V1 <- 03
225c: Executing subroutine at 25c
f515: Delay <- V5
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
3f01: Skip following if Vf == 01
123c: PC <- 23c
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
71ff: V1 <- V1 + ff
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
2340: Executing subroutine at 340
121c: PC <- 21c
e7a1: Skip if key corresponding to value in V7 is not pressed 
2272: Executing subroutine at 272
e8a1: Skip if key corresponding to value in V8 is not pressed 
2284: Executing subroutine at 284
e9a1: Skip if key corresponding to value in V9 is not pressed 
2296: Executing subroutine at 296
e29e: Skip if key corresponding to value in V2 is pressed 
1250: PC <- 250
6600: V6 <- 00
f615: Delay <- V6
f607: V6 <- delay register
3600: Skip following if V6 == 00
123c: PC <- 23c
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
7101: V1 <- V1 + 01
122a: PC <- 22a
a2c4: Index <- 2c4
f41e: Index <- Index + V4
6600: V6 <- 00
4301: Skip following if V3 != 01
6604: V6 <- 04
4302: Skip following if V3 != 02
6608: V6 <- 08
4303: Skip following if V3 != 03
660c: V6 <- 0c
f61e: Index <- Index + V6
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
70ff: V0 <- V0 + ff
2334: Executing subroutine at 334
3f01: Skip following if Vf == 01
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
7001: V0 <- V0 + 01
2334: Executing subroutine at 334
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
7001: V0 <- V0 + 01
2334: Executing subroutine at 334
3f01: Skip following if Vf == 01
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
70ff: V0 <- V0 + ff
2334: Executing subroutine at 334
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
7301: V3 <- V3 + 01
4304: Skip following if V3 != 04
6300: V3 <- 00
225c: Executing subroutine at 25c
2334: Executing subroutine at 334
3f01: Skip following if Vf == 01
00ee: Return
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
73ff: V3 <- V3 + ff
43ff: Skip following if V3 != ff
6303: V3 <- 03
225c: Executing subroutine at 25c
2334: Executing subroutine at 334
00ee: Return
8000: V0 <- V0
6705: V7 <- 05
6806: V8 <- 06
6904: V9 <- 04
611f: V1 <- 1f
6510: V5 <- 10
6207: V2 <- 07
00ee: Return
40e0: Skip following if V0 != e0
-----> UNKNOWN INSTRUCTION: 0000
40c0: Skip following if V0 != c0
4000: Skip following if V0 != 00
00e0: Clear screen
4000: Skip following if V0 != 00
4060: Skip following if V0 != 60
4000: Skip following if V0 != 00
4040: Skip following if V0 != 40
6000: V0 <- 00
20e0: Executing subroutine at 0e0
-----> UNKNOWN INSTRUCTION: 0000
c040: V0 <- random & 40
4000: Skip following if V0 != 00
00e0: Clear screen
8000: V0 <- V0
4040: Skip following if V0 != 40
c000: V0 <- random & 00
00e0: Clear screen
2000: Executing subroutine at 000
6040: V0 <- 40
4000: Skip following if V0 != 00
80e0: V0 <- Ve
-----> UNKNOWN INSTRUCTION: 0000
40c0: Skip following if V0 != c0
8000: V0 <- V0
c060: V0 <- random & 60
-----> UNKNOWN INSTRUCTION: 0000
40c0: Skip following if V0 != c0
8000: V0 <- V0
c060: V0 <- random & 60
-----> UNKNOWN INSTRUCTION: 0000
80c0: V0 <- Vc
4000: Skip following if V0 != 00
-----> UNKNOWN INSTRUCTION: 0060
c000: V0 <- random & 00
80c0: V0 <- Vc
4000: Skip following if V0 != 00
-----> UNKNOWN INSTRUCTION: 0060
c000: V0 <- random & 00
c0c0: V0 <- random & c0
-----> UNKNOWN INSTRUCTION: 0000
c0c0: V0 <- random & c0
-----> UNKNOWN INSTRUCTION: 0000
c0c0: V0 <- random & c0
-----> UNKNOWN INSTRUCTION: 0000
c0c0: V0 <- random & c0
-----> UNKNOWN INSTRUCTION: 0000
4040: Skip following if V0 != 40
4040: Skip following if V0 != 40
-----> UNKNOWN INSTRUCTION: 00f0
-----> UNKNOWN INSTRUCTION: 0000
4040: Skip following if V0 != 40
4040: Skip following if V0 != 40
-----> UNKNOWN INSTRUCTION: 00f0
-----> UNKNOWN INSTRUCTION: 0000
d014: Draw sprite 
  -> Rows: 4
  -> X: V0
  -> Y: V1
6635: V6 <- 35
76ff: V6 <- V6 + ff
3600: Skip following if V6 == 00
1338: PC <- 338
00ee: Return
a2b4: Index <- 2b4
8c10: Vc <- V1
3c1e: Skip following if Vc == 1e
7c01: Vc <- Vc + 01
3c1e: Skip following if Vc == 1e
7c01: Vc <- Vc + 01
3c1e: Skip following if Vc == 1e
7c01: Vc <- Vc + 01
235e: Executing subroutine at 35e
4b0a: Skip following if Vb != 0a
2372: Executing subroutine at 372
91c0: Skip if V1 != Vc
00ee: Return
7101: V1 <- V1 + 01
1350: PC <- 350
601b: V0 <- 1b
6b00: Vb <- 00
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
3f00: Skip following if Vf == 00
7b01: Vb <- Vb + 01
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
7001: V0 <- V0 + 01
3025: Skip following if V0 == 25
1362: PC <- 362
00ee: Return
601b: V0 <- 1b
d011: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: V1
7001: V0 <- V0 + 01
3025: Skip following if V0 == 25
1374: PC <- 374
8e10: Ve <- V1
8de0: Vd <- Ve
7eff: Ve <- Ve + ff
601b: V0 <- 1b
6b00: Vb <- 00
d0e1: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: Ve
3f00: Skip following if Vf == 00
1390: PC <- 390
d0e1: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: Ve
1394: PC <- 394
d0d1: Draw sprite 
  -> Rows: 1
  -> X: V0
  -> Y: Vd
7b01: Vb <- Vb + 01
7001: V0 <- V0 + 01
3025: Skip following if V0 == 25
1386: PC <- 386
4b00: Skip following if Vb != 00
13a6: PC <- 3a6
7dff: Vd <- Vd + ff
7eff: Ve <- Ve + ff
3d01: Skip following if Vd == 01
1382: PC <- 382
23c0: Executing subroutine at 3c0
3f01: Skip following if Vf == 01
23c0: Executing subroutine at 3c0
7a01: Va <- Va + 01
23c0: Executing subroutine at 3c0
80a0: V0 <- Va
6d07: Vd <- 07
80d2: V0 <- V0 AND Vd
4004: Skip following if V0 != 04
75fe: V5 <- V5 + fe
4502: Skip following if V5 != 02
6504: V5 <- 04
00ee: Return
a700: Index <- 700
f255: Mem[index + 2] <- V0...V2
a804: Index <- 804
fa33: Va <- Binary coded decimal starting at Index
f265: V0..V2 <- mem[index +2]
f029: Index <- Mem address of sprite of char in V0
6d32: Vd <- 32
6e00: Ve <- 00
dde5: Draw sprite 
  -> Rows: 5
  -> X: Vd
  -> Y: Ve
7d05: Vd <- Vd + 05
f129: Index <- Mem address of sprite of char in V1
dde5: Draw sprite 
  -> Rows: 5
  -> X: Vd
  -> Y: Ve
7d05: Vd <- Vd + 05
f229: Index <- Mem address of sprite of char in V2
dde5: Draw sprite 
  -> Rows: 5
  -> X: Vd
  -> Y: Ve
a700: Index <- 700
f265: V0..V2 <- mem[index +2]
a2b4: Index <- 2b4
00ee: Return
6a00: Va <- 00
6019: V0 <- 19
00ee: Return
3723: Skip following if V7 == 23
